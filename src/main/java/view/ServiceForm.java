package view;

import Strategy.DetailedDisplayStrategy;
import Strategy.DisplayStrategy;
import Strategy.JsonDisplayStrategy;
import Strategy.SimpleDisplayStrategy;
import factory.UserFactory;
import java.util.ArrayList;
import java.util.List;
import mephi.b23902.service.YamlService;
import model.User;
import model.UserType;
import observer.Publisher;
import observer.Subscriber;

/**
 *
 * @author Настя
 */
public class ServiceForm extends javax.swing.JFrame {

    //private UserFactory userFactory;
    private Publisher premiumUserPublisher;
    private List<User> currentSessionUsers;

    /**
     * Creates new form ServiceForm
     */
    public ServiceForm() {
        initComponents();

        //this.userFactory = new UserFactory();
        this.premiumUserPublisher = new Publisher();
        this.currentSessionUsers = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserButton = new javax.swing.JButton();
        showPremiumButton = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        userDisplayArea = new javax.swing.JTextArea();
        strategyComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createUserButton.setText("Создать пользователей");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });

        showPremiumButton.setText("Показать PREMIUM");
        showPremiumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPremiumButtonActionPerformed(evt);
            }
        });

        userDisplayArea.setColumns(20);
        userDisplayArea.setRows(5);
        jScrollPane1.setViewportView(userDisplayArea);

        scrollPane1.add(jScrollPane1);

        strategyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Простой формат", "Детальный формат", "Json формат"}));
        strategyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strategyComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Выберите формат:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(showPremiumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strategyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(createUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(showPremiumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(strategyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 154, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        premiumUserPublisher.notifySubscribers();
        
        currentSessionUsers.clear();
        userDisplayArea.setText("");
        
        YamlService yamlService = new YamlService();
        UserFactory userFactory = new UserFactory(yamlService);

        List<User> newUsers = userFactory.createUsers();
        currentSessionUsers.addAll(newUsers);

        for (User user : currentSessionUsers) {
            userDisplayArea.append(user.toString() + "\n");

            if (user.getUserType() == UserType.PREMIUM) {
                final Subscriber[] subscriberHolder = new Subscriber[1];

                Subscriber premiumSubscriber = () -> {
                    int selectedIndex = strategyComboBox.getSelectedIndex();
                    DisplayStrategy strategy;
                    if (selectedIndex == 1) {
                        strategy = new DetailedDisplayStrategy();
                    } else if (selectedIndex == 2) {
                        strategy = new JsonDisplayStrategy();
                    } else {
                        strategy = new SimpleDisplayStrategy();
                    }
                    String formattedUser = strategy.format(user);
                    userDisplayArea.append(formattedUser + "\n");
                    premiumUserPublisher.unsubscribe(subscriberHolder[0]);
                };

                subscriberHolder[0] = premiumSubscriber;
                premiumUserPublisher.subscribe(premiumSubscriber);
            }
        }

//        for (int i = 0; i < 5; i++) {
//            User user = UserFactory.createUser();
//            currentSessionUsers.add(user);
//            userDisplayArea.append(user.toString() + "\n");
//            
//            if (user.getUserType() == UserType.PREMIUM) {
//                final Subscriber[] subscriberHolder = new Subscriber[1];
//
//                Subscriber premiumSubscriber = () -> {
//                    int selectedIndex = strategyComboBox.getSelectedIndex();
//                    DisplayStrategy strategy;
//                    
//                    if (selectedIndex == 0) {
//                        strategy = new SimpleDisplayStrategy();
//                    } else if (selectedIndex == 1) {
//                        strategy = new DetailedDisplayStrategy();
//                    } else {
//                        strategy = new JsonDisplayStrategy();
//                    }
//                    
//                    String formattedUser = strategy.format(user);
//                    userDisplayArea.append(formattedUser + "\n");
//                    premiumUserPublisher.unsubscribe(subscriberHolder[0]);
//                };
//                subscriberHolder[0] = premiumSubscriber;
//                premiumUserPublisher.subscribe(premiumSubscriber);
//            }
//        }
        userDisplayArea.append("Пользователи созданы!\nВыберите формат вывода PREMIUM пользователей\n");
    }//GEN-LAST:event_createUserButtonActionPerformed

    private void showPremiumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPremiumButtonActionPerformed
        userDisplayArea.append("PREMIUM пользователи:\n");
        premiumUserPublisher.notifySubscribers();
    }//GEN-LAST:event_showPremiumButtonActionPerformed

    private void strategyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strategyComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strategyComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServiceForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createUserButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JButton showPremiumButton;
    private javax.swing.JComboBox<String> strategyComboBox;
    private javax.swing.JTextArea userDisplayArea;
    // End of variables declaration//GEN-END:variables
}
